object Study {
  println("Welcome to the Scala worksheet")       //> Welcome to the Scala worksheet
  
  //************Strings*****************************************************************
  
  //Prob: Testing equality of Strings
  
  val s1 = "vivek"                                //> s1  : String = vivek
  val s2 = "vivek"                                //> s2  : String = vivek
  
  s1==s2                                          //> res0: Boolean = true
  
  if (s1==s2)
  {
  	println("strings aress equal");
  }                                               //> strings aress equal
 
 //Prob: creating multiple line Strings
 
 val s3 = """this isdfdfsds strings
 which is on
 three line"""                                    //> s3  : String = this isdfdfsds strings
                                                  //|  which is on
                                                  //|  three line
 
 //Prob: Spliting strings
 
 val s4 = "hello,world"                           //> s4  : String = hello,world
 val s5 =  s4.split(",")                          //> s5  : Array[String] = Array(hello, world)
 for( s <- s5)
 println(s)                                       //> hello
                                                  //| world
 //Prob : Variable sudstitution
 
 val weight = 87                                  //> weight  : Int = 87
 println(s"weight of vivek is $weight")           //> weight of vivek is 87
 
 
 //Prob: Processing one charector at a time
 
	val s ="hello vivek".map(c=>c.toUpper)    //> s  : String = HELLO VIVEK
 
  val s11 ="hello vivek".map(_.toUpper)           //> s11  : String = HELLO VIVEK
 
 for (c <- s11)
 yield c.toLower                                  //> res1: String = hello vivek
 
 //Prob: detertime string contains regualr expression
 
	val numPattern= "[0-9]+".r                //> numPattern  : scala.util.matching.Regex = [0-9]+
	val letterpattern="[a-z]+".r              //> letterpattern  : scala.util.matching.Regex = [a-z]+
	val address = "flat no  nymihs homes"     //> address  : String = flat no  nymihs homes
	val x = numPattern.findAllIn(address)     //> x  : scala.util.matching.Regex.MatchIterator = empty iterator
	val x1 = letterpattern.findAllIn(address).foreach(println)
                                                  //> flat
                                                  //| no
                                                  //| nymihs
                                                  //| homes
                                                  //| x1  : Unit = ()
                                                  
	//Prob searching reular expressions and replacing them
	
	 
 
}